@page
@model BookListRazor.Pages.BookList.IndexModel

<br />
<div class="container row p-0 m-0">
    <div class="col-9">
        <h2 class="text-info">Book List</h2>
    </div>
    <div class="col-3">
        <a class="btn btn-info form-control text-white">Create New Book</a>
    </div>

    <div class="col-12 border p-3 mt-3">
        <form method="post">
            @*Check if the get we made for our Books razor page returns any results from the database*@
            @if(Model.Books.Count() > 0)
            {
                <table class="table table-striped border">
                    <tr class="table-secondary">
                        <th>
                            @*This is the new way to do it with asp tag helpers. Much easier and concise.*@
                            <label asp-for="Books.FirstOrDefault().Name"></label>
                        </th>
                        <th>
                            @*@Html.DisplayNameFor(m=>m.Books.FirstOrDefault().Author)  This is the old html helper way of doing it without tag-helpers*@
                            <label asp-for="Books.FirstOrDefault().Author"></label>
                        </th>
                        <th>

                        </th>
                    </tr>
                    @foreach(var item in Model.Books)
                    {
                <tr>
                    @*Have to use Html helper as there is no tag helper for DisplayFor()*@
                    <td>
                        @Html.DisplayFor(m => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(m => item.Author)
                    </td>
                </tr>
                    }
                </table>
            }
            else
            {
                <p>No Books available to display.</p>
            }
        </form>
    </div>
</div>
